<div class="answer-group-set" id="answer-group-set-<%= context.path_str %>">
  <% unless context.read_only? %>
    <%= hidden_field_tag context.input_name(:id), group_set.id %>
    <%= hidden_field_tag context.input_name(:type), "AnswerGroupSet" %>
    <%= hidden_field_tag context.input_name(:questioning_id), group_set.questioning_id %>
    <%= hidden_field_tag context.input_name(:_relevant), "true", class: "relevant" %>
    <%= hidden_field_tag context.input_name(:_destroy), "false" %>
  <% end %>

  <div class="children">
    <%= render("hierarchical_responses/answers/nodes", nodes: group_set.children,
                                                       context: context, removable: true) %>
  </div>

  <% unless context.read_only? %>
    <div class="empty-notice">
      <div class="group-header">
        <h2><%= group_set.qing_group.group_name %></h2>
      </div>
      <p><%= t("response.empty_group_notice") %></p>
    </div>

    <a href="#" class="add-repeat">
      <%= icon_tag("plus") %>
      <%= t("response.add_to_group", group_name: group_set.name) %>
    </a>

    <%
    # Below we render a template based on the blank response tree
    # This template is used to insert new repeat groups and, upon
    # insertion, the following JavaScript will be executed recursively
    # for any nested group sets.
    %>
    <%= javascript_doc_ready do %>
      new ELMO.Views.ResponseFormRepeatView({
        el: $("#answer-group-set-<%= context.path_str %>"),
        next_index: <%= group_set.children.length %>,
        tmpl: <%= json(render("hierarchical_responses/answers/nodes",
          nodes: context.find(@blank_response).try(:children) || [],
          index_placeholder: true,
          removable: true,
          context: context)) %>
      })
    <% end %>
  <% end %>
</div>
