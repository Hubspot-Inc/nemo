<% reset_password_method = form.object.reset_password_method %>

<%= form.select(:reset_password_method) do %>
  <% if !form.object.new_record? %>
    <%= content_tag(:option, t("user.password_options.no_change"), value: "dont", selected: reset_password_method == "dont") %>
  <% end %>

  <%# Can't reset by email in offline mode %>
  <% if !configatron.offline_mode %>
    <%= content_tag(:option, t("user.password_options.send_email_instructions"), value: "email", selected: reset_password_method == "email") %>
  <% end %>

  <%# Setting password via print is insecure, so only allowed for enumerators in mission mode %>
  <%# ... unless in offline mode because it's then the only option. %>
  <% if configatron.offline_mode || !admin_mode? && (@user.new_record? || @user.enumerator_only?) %>
    <%= content_tag(:option, t("user.password_options.generate_new"), value: "print", selected: reset_password_method == "print") %>
  <% end %>

  <% if admin_mode? %>
    <%= content_tag(:option, t("user.password_options.enter_new_password"), value: "enter", selected: reset_password_method == "enter") %>
  <% else %>
    <%= content_tag(:option, t("user.password_options.enter_new_password_show_printable_instructions"), value: "enter", selected: reset_password_method == "enter") %>
  <% end %>
<% end %>

<div class="hide password-fields">
  <%= form.field(:password, type: :password) %>
  <%= form.field(:password_confirmation, type: :password) %>
</div>
