<% if admin_mode? %>

  <%# special error output %>
  <%= content_tag(:div, assignment_errors.join(' '), :class => 'form-errors') unless assignment_errors.empty? %>


  <div class="assignment_header">
    <div class="mission"><%= translate_model(Mission) %></div>
    <div class="role"><%= t('role.role') %></div>
  </div>

  <%= react_component("UserAssignmentForm", assignment_data) %>

<% else %>

  <% if read_only || cannot?(:change_assignments, @user) %>

    <%# in show mode, just show the role the current mission's assignment %>
    <%= @current_assignment.role ? t(@current_assignment.role, :scope => :role) : t('common.none') %>

  <% else %>

    <%= elmo_fields_for("user[assignments_attributes][0]", @current_assignment) do |af| %>
      <%= af.hidden_field(:id) %>

      <%# Ok to have this here because we know the user has change_assignments privileges. %>
      <%= af.hidden_field(:mission_id) %>

      <%# special error output %>
      <%= content_tag(:div, @user.errors[:'assignments.role'].join, :class => 'form-errors') unless @user.errors[:'assignments.role'].empty? %>

      <%= af.select(:role, User::ROLES.map{|r| [t(r, :scope => :role), r]}, {:prompt => "[#{t('role.blank')}]"},
        :class => "form-control") %>
    <% end %>

  <% end %>

<% end %>
